set $mod Mod4

font pango:Source Code Pro 10
#font pango:DejaVu Sans Mono 8

# network manager status applet
exec --no-startup-id nm-applet

# bluetooth status applet
exec --no-startup-id blueman-applet

# starts polybar status bar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# starts picom compositor
exec --no-startup-id picom

# starts notifications daemon
exec --no-startup-id dunst
exec --no-startup-id kunst
exec --no-startup-id dunst_listener

# lock screen
bindsym $mod+l exec dm-tool switch-to-greeter

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -q set Master 5%+ unmute 
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -q set Master 5%- unmute
bindsym XF86AudioMute exec --no-startup-id amixer -q set Master toggle

## Multimedia Keys
# keybinds for mpc (MPD)
bindsym $mod+Shift+v exec mpc volume -5 && notify-send -u low -t 1800 "音楽プレーヤー" "Lowered $(mpc volume)"
bindsym $mod+Shift+b exec mpc volume +5 && notify-send -u low -t 1800 "音楽プレーヤー" "Augmented $(mpc volume)"
bindsym XF86AudioPlay exec mpc -q toggle && notify-send -u low -t 1800 -i /tmp/kunst.png  "音楽プレーヤー" "$(mpc current)"
bindsym XF86AudioNext exec mpc -q next && notify-send -u low -t 1800 -i /tmp/kunst.png  "音楽プレーヤー" "$(mpc current)"
bindsym XF86AudioPrev exec mpc -q prev && notify-send -u low -t 1800 -i /tmp/kunst.png "音楽プレーヤー" "$(mpc current)"

# brightness settings
bindsym XF86MonBrightnessUp exec --no-startup-id blight -d intel_backlight set +10% && notify-send -u low -t 1800 "バックライト" "Augmented of 10%"
bindsym XF86MonBrightnessDown exec --no-startup-id blight -d intel_backlight set -10% && notify-send -u low -t 1800 "バックライト" "Lowered of 10%"

# scrot keybind
bindsym Ctrl+Mod1+Tab exec --no-startup-id scrot -s -e 'mv $f ~/Pictures/screenshots/' && notify-send -u low -t 1800 "ピクチャー" "Screenshot saved"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier Mod1

# start a terminal
bindsym Mod1+Shift+t exec kitty

# start a file manager
bindsym $mod+e exec kitty ranger

# kill focused window
bindsym $mod+w kill
bindsym Mod1+F4 kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindcode 133 --release exec rofi -show drun
bindsym $mod+r exec rofi -show run
bindsym $mod+a exec ytfzf -D
bindsym $mod+s exec wal -i ~/Pictures/Wallpapers/ --iterative && pywalfox update && slick-pywal

# Focus to window
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
# bindsym $mod+e layout toggle split

# toggle tiling / floating
# bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
# bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+q mode "default"
}

bindsym $mod+q mode "resize"

for_window [class=".*"] border pixel 0

gaps inner 16
gaps outer 16
